
ByggernG46.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000cd0  00000d64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cd0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010c  0080010c  00000d70  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d70  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011dd  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000761  00000000  00000000  000020d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000079d  00000000  00000000  0000283a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000248  00000000  00000000  00002fd8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ec  00000000  00000000  00003220  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000077d  00000000  00000000  0000360c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000158  00000000  00000000  00003d89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 84 00 	jmp	0x108	; 0x108 <__ctors_end>
   4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
   8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
   c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  10:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  14:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  18:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  1c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  20:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  24:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  28:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  2c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  30:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  34:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  38:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  3c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  40:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  44:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  48:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  4c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  50:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  54:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  58:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  5c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  60:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  64:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  68:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  6c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>

00000070 <__trampolines_end>:
  70:	06 07       	cpc	r16, r22
  72:	0f 1c       	adc	r0, r15
  74:	38 f0       	brcs	.+14     	; 0x84 <doggo2+0xc>
  76:	e0 60       	ori	r30, 0x00	; 0

00000078 <doggo2>:
  78:	f0 0e 81 12 c1 42 11 81 02 01 06 08 10 20 20 40     .....B.......  @
  88:	40 40 40 40 40 40 80 00 3f c0 00 01 81 81 01 00     @@@@@@..?.......
  98:	80 80 80 80 00 00 80 80 00 00 e0 1f 01 01 00 00     ................
  a8:	00 03 04 02 01 01 02 01 00 00 00 01 02 01 01 02     ................
  b8:	04 03 00 00 00 00 00 00                             ........

000000c0 <doggo>:
  c0:	f0 0e 81 12 c1 42 11 81 02 01 06 08 10 20 20 40     .....B.......  @
  d0:	40 70 08 f0 00 00 00 00 3f c0 00 01 81 81 01 00     @p......?.......
  e0:	80 80 80 80 00 00 80 80 00 00 e0 1f 00 00 00 00     ................
  f0:	00 01 02 01 00 03 04 02 01 00 00 03 04 02 01 01     ................
 100:	02 01 00 00 00 00 00 00                             ........

00000108 <__ctors_end>:
 108:	11 24       	eor	r1, r1
 10a:	1f be       	out	0x3f, r1	; 63
 10c:	cf ef       	ldi	r28, 0xFF	; 255
 10e:	d4 e0       	ldi	r29, 0x04	; 4
 110:	de bf       	out	0x3e, r29	; 62
 112:	cd bf       	out	0x3d, r28	; 61

00000114 <__do_copy_data>:
 114:	11 e0       	ldi	r17, 0x01	; 1
 116:	a0 e0       	ldi	r26, 0x00	; 0
 118:	b1 e0       	ldi	r27, 0x01	; 1
 11a:	e0 ed       	ldi	r30, 0xD0	; 208
 11c:	fc e0       	ldi	r31, 0x0C	; 12
 11e:	02 c0       	rjmp	.+4      	; 0x124 <__do_copy_data+0x10>
 120:	05 90       	lpm	r0, Z+
 122:	0d 92       	st	X+, r0
 124:	ac 30       	cpi	r26, 0x0C	; 12
 126:	b1 07       	cpc	r27, r17
 128:	d9 f7       	brne	.-10     	; 0x120 <__do_copy_data+0xc>

0000012a <__do_clear_bss>:
 12a:	21 e0       	ldi	r18, 0x01	; 1
 12c:	ac e0       	ldi	r26, 0x0C	; 12
 12e:	b1 e0       	ldi	r27, 0x01	; 1
 130:	01 c0       	rjmp	.+2      	; 0x134 <.do_clear_bss_start>

00000132 <.do_clear_bss_loop>:
 132:	1d 92       	st	X+, r1

00000134 <.do_clear_bss_start>:
 134:	a6 31       	cpi	r26, 0x16	; 22
 136:	b2 07       	cpc	r27, r18
 138:	e1 f7       	brne	.-8      	; 0x132 <.do_clear_bss_loop>
 13a:	0e 94 b8 00 	call	0x170	; 0x170 <main>
 13e:	0c 94 66 06 	jmp	0xccc	; 0xccc <_exit>

00000142 <__bad_interrupt>:
 142:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000146 <setup>:

//#define F_CPU 4.9152E6
#include <util/delay.h>

void setup(void){
	USART_Init(MYUBRR);		// init UART communication
 146:	8e e1       	ldi	r24, 0x1E	; 30
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <USART_Init>
	fdevopen((int(*)(char, struct __file*))&USART_Transmit, (int(*)(struct __file*))&USART_Receive);	//configure fprint to use UART
 14e:	6a e0       	ldi	r22, 0x0A	; 10
 150:	72 e0       	ldi	r23, 0x02	; 2
 152:	86 e0       	ldi	r24, 0x06	; 6
 154:	92 e0       	ldi	r25, 0x02	; 2
 156:	0e 94 0e 02 	call	0x41c	; 0x41c <fdevopen>
	MCUCR |= (1<<SRE);		// use external memory
 15a:	85 b7       	in	r24, 0x35	; 53
 15c:	80 68       	ori	r24, 0x80	; 128
 15e:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2); // Ikke bruk PC7-PC4 til external memory
 160:	80 b7       	in	r24, 0x30	; 48
 162:	80 62       	ori	r24, 0x20	; 32
 164:	80 bf       	out	0x30, r24	; 48
	ADC_init();
 166:	0e 94 e5 00 	call	0x1ca	; 0x1ca <ADC_init>
	//SRAM_test();			// test write/read functionality
	oled_init();
 16a:	0e 94 cd 01 	call	0x39a	; 0x39a <oled_init>
 16e:	08 95       	ret

00000170 <main>:
}



int main(void){
	setup();
 170:	0e 94 a3 00 	call	0x146	; 0x146 <setup>
	
	intro(103,4);
 174:	64 e0       	ldi	r22, 0x04	; 4
 176:	87 e6       	ldi	r24, 0x67	; 103
 178:	0e 94 63 01 	call	0x2c6	; 0x2c6 <intro>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 17c:	23 e9       	ldi	r18, 0x93	; 147
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	92 e0       	ldi	r25, 0x02	; 2
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0x12>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0x1c>
 18c:	00 00       	nop
	_delay_ms(200);
	//start_menu();
	
	while(1){
		//USART_Transmit('G');
		printf("%d\r\n",100000);
 18e:	ff 24       	eor	r15, r15
 190:	f3 94       	inc	r15
 192:	06 e8       	ldi	r16, 0x86	; 134
 194:	10 ea       	ldi	r17, 0xA0	; 160
 196:	c6 e0       	ldi	r28, 0x06	; 6
 198:	d1 e0       	ldi	r29, 0x01	; 1
 19a:	1f 92       	push	r1
 19c:	ff 92       	push	r15
 19e:	0f 93       	push	r16
 1a0:	1f 93       	push	r17
 1a2:	df 93       	push	r29
 1a4:	cf 93       	push	r28
 1a6:	0e 94 59 02 	call	0x4b2	; 0x4b2 <printf>
 1aa:	99 ec       	ldi	r25, 0xC9	; 201
 1ac:	2f e7       	ldi	r18, 0x7F	; 127
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	91 50       	subi	r25, 0x01	; 1
 1b2:	20 40       	sbci	r18, 0x00	; 0
 1b4:	80 40       	sbci	r24, 0x00	; 0
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0x40>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x4a>
 1ba:	00 00       	nop
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	e8 cf       	rjmp	.-48     	; 0x19a <main+0x2a>

000001ca <ADC_init>:
#include <stdio.h>

#include "Settings.h"
#include <util/delay.h>
void ADC_init(){
	DDRE &= ~(1<<PINE0); // setter pinE0 til input?
 1ca:	30 98       	cbi	0x06, 0	; 6
 1cc:	08 95       	ret

000001ce <drawDoggo>:
#include <util/delay.h>
#include "FontBB.h"
#include "Oled.h"


void drawDoggo(uint8_t x, uint8_t y){
 1ce:	cf 92       	push	r12
 1d0:	df 92       	push	r13
 1d2:	ef 92       	push	r14
 1d4:	ff 92       	push	r15
 1d6:	0f 93       	push	r16
 1d8:	1f 93       	push	r17
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	c8 2e       	mov	r12, r24
 1e0:	f6 2e       	mov	r15, r22
 1e2:	00 e0       	ldi	r16, 0x00	; 0
 1e4:	10 e0       	ldi	r17, 0x00	; 0
	for (int i = 0; i<3; i++){
		oled_goto_line(i+y);
		oled_goto_col(x);
		for (int j = 0; j<24; j++){
 1e6:	d1 2c       	mov	r13, r1
 1e8:	e1 2c       	mov	r14, r1

static inline void oled_write_command(char c){
	*external_oled_command = c;
}
static inline void oled_write_data(char d){
	*external_oled_data = d;
 1ea:	c0 e0       	ldi	r28, 0x00	; 0
 1ec:	d2 e1       	ldi	r29, 0x12	; 18
#include "Oled.h"


void drawDoggo(uint8_t x, uint8_t y){
	for (int i = 0; i<3; i++){
		oled_goto_line(i+y);
 1ee:	8f 2d       	mov	r24, r15
 1f0:	0e 94 96 01 	call	0x32c	; 0x32c <oled_goto_line>
		oled_goto_col(x);
 1f4:	8c 2d       	mov	r24, r12
 1f6:	0e 94 9a 01 	call	0x334	; 0x334 <oled_goto_col>
		for (int j = 0; j<24; j++){
 1fa:	2d 2d       	mov	r18, r13
 1fc:	3e 2d       	mov	r19, r14
 1fe:	a8 01       	movw	r20, r16
 200:	40 54       	subi	r20, 0x40	; 64
 202:	5f 4f       	sbci	r21, 0xFF	; 255
 204:	fa 01       	movw	r30, r20
 206:	e2 0f       	add	r30, r18
 208:	f3 1f       	adc	r31, r19
			oled_write_data(pgm_read_byte(&doggo[i][j]));
 20a:	e4 91       	lpm	r30, Z
 20c:	e8 83       	st	Y, r30

void drawDoggo(uint8_t x, uint8_t y){
	for (int i = 0; i<3; i++){
		oled_goto_line(i+y);
		oled_goto_col(x);
		for (int j = 0; j<24; j++){
 20e:	2f 5f       	subi	r18, 0xFF	; 255
 210:	3f 4f       	sbci	r19, 0xFF	; 255
 212:	28 31       	cpi	r18, 0x18	; 24
 214:	31 05       	cpc	r19, r1
 216:	b1 f7       	brne	.-20     	; 0x204 <drawDoggo+0x36>
 218:	f3 94       	inc	r15
 21a:	08 5e       	subi	r16, 0xE8	; 232
 21c:	1f 4f       	sbci	r17, 0xFF	; 255
#include "FontBB.h"
#include "Oled.h"


void drawDoggo(uint8_t x, uint8_t y){
	for (int i = 0; i<3; i++){
 21e:	08 34       	cpi	r16, 0x48	; 72
 220:	11 05       	cpc	r17, r1
 222:	29 f7       	brne	.-54     	; 0x1ee <drawDoggo+0x20>
		oled_goto_col(x);
		for (int j = 0; j<24; j++){
			oled_write_data(pgm_read_byte(&doggo[i][j]));
		}
	}
}
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	ff 90       	pop	r15
 22e:	ef 90       	pop	r14
 230:	df 90       	pop	r13
 232:	cf 90       	pop	r12
 234:	08 95       	ret

00000236 <drawDoggo2>:

void drawDoggo2(uint8_t x, uint8_t y){
 236:	cf 92       	push	r12
 238:	df 92       	push	r13
 23a:	ef 92       	push	r14
 23c:	ff 92       	push	r15
 23e:	0f 93       	push	r16
 240:	1f 93       	push	r17
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	c8 2e       	mov	r12, r24
 248:	f6 2e       	mov	r15, r22
 24a:	00 e0       	ldi	r16, 0x00	; 0
 24c:	10 e0       	ldi	r17, 0x00	; 0
	for (int i = 0; i<3; i++){
		oled_goto_line(i+y);
		oled_goto_col(x);
		for (int j = 0; j<24; j++){
 24e:	d1 2c       	mov	r13, r1
 250:	e1 2c       	mov	r14, r1
 252:	c0 e0       	ldi	r28, 0x00	; 0
 254:	d2 e1       	ldi	r29, 0x12	; 18
	}
}

void drawDoggo2(uint8_t x, uint8_t y){
	for (int i = 0; i<3; i++){
		oled_goto_line(i+y);
 256:	8f 2d       	mov	r24, r15
 258:	0e 94 96 01 	call	0x32c	; 0x32c <oled_goto_line>
		oled_goto_col(x);
 25c:	8c 2d       	mov	r24, r12
 25e:	0e 94 9a 01 	call	0x334	; 0x334 <oled_goto_col>
		for (int j = 0; j<24; j++){
 262:	2d 2d       	mov	r18, r13
 264:	3e 2d       	mov	r19, r14
 266:	a8 01       	movw	r20, r16
 268:	48 58       	subi	r20, 0x88	; 136
 26a:	5f 4f       	sbci	r21, 0xFF	; 255
 26c:	fa 01       	movw	r30, r20
 26e:	e2 0f       	add	r30, r18
 270:	f3 1f       	adc	r31, r19
			oled_write_data(pgm_read_byte(&doggo2[i][j]));
 272:	e4 91       	lpm	r30, Z
 274:	e8 83       	st	Y, r30

void drawDoggo2(uint8_t x, uint8_t y){
	for (int i = 0; i<3; i++){
		oled_goto_line(i+y);
		oled_goto_col(x);
		for (int j = 0; j<24; j++){
 276:	2f 5f       	subi	r18, 0xFF	; 255
 278:	3f 4f       	sbci	r19, 0xFF	; 255
 27a:	28 31       	cpi	r18, 0x18	; 24
 27c:	31 05       	cpc	r19, r1
 27e:	b1 f7       	brne	.-20     	; 0x26c <drawDoggo2+0x36>
 280:	f3 94       	inc	r15
 282:	08 5e       	subi	r16, 0xE8	; 232
 284:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
}

void drawDoggo2(uint8_t x, uint8_t y){
	for (int i = 0; i<3; i++){
 286:	08 34       	cpi	r16, 0x48	; 72
 288:	11 05       	cpc	r17, r1
 28a:	29 f7       	brne	.-54     	; 0x256 <drawDoggo2+0x20>
		oled_goto_col(x);
		for (int j = 0; j<24; j++){
			oled_write_data(pgm_read_byte(&doggo2[i][j]));
		}
	}
}
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	1f 91       	pop	r17
 292:	0f 91       	pop	r16
 294:	ff 90       	pop	r15
 296:	ef 90       	pop	r14
 298:	df 90       	pop	r13
 29a:	cf 90       	pop	r12
 29c:	08 95       	ret

0000029e <drawDoggoBone>:

void drawDoggoBone(uint8_t x, uint8_t y){
 29e:	96 2f       	mov	r25, r22
	oled_pos(y,x);
 2a0:	68 2f       	mov	r22, r24
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	89 2f       	mov	r24, r25
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	0e 94 ab 01 	call	0x356	; 0x356 <oled_pos>
 2ac:	e0 e7       	ldi	r30, 0x70	; 112
 2ae:	f0 e0       	ldi	r31, 0x00	; 0
 2b0:	88 e7       	ldi	r24, 0x78	; 120
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	a0 e0       	ldi	r26, 0x00	; 0
 2b6:	b2 e1       	ldi	r27, 0x12	; 18
	for(int i=0; i<8; i++){
		oled_write_data(pgm_read_byte(&doggoBone[i]));	
 2b8:	24 91       	lpm	r18, Z
 2ba:	2c 93       	st	X, r18
 2bc:	31 96       	adiw	r30, 0x01	; 1
	}
}

void drawDoggoBone(uint8_t x, uint8_t y){
	oled_pos(y,x);
	for(int i=0; i<8; i++){
 2be:	e8 17       	cp	r30, r24
 2c0:	f9 07       	cpc	r31, r25
 2c2:	d1 f7       	brne	.-12     	; 0x2b8 <drawDoggoBone+0x1a>
		oled_write_data(pgm_read_byte(&doggoBone[i]));	
	}
}
 2c4:	08 95       	ret

000002c6 <intro>:




void intro(uint8_t x, uint8_t y){
 2c6:	0f 93       	push	r16
 2c8:	1f 93       	push	r17
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	06 2f       	mov	r16, r22
 2d0:	18 2f       	mov	r17, r24
/*uint8_t x = 128;*/
	for (int i=0; i<104; i++){
 2d2:	c0 e0       	ldi	r28, 0x00	; 0
 2d4:	d0 e0       	ldi	r29, 0x00	; 0
		drawDoggoBone(0,4);
 2d6:	64 e0       	ldi	r22, 0x04	; 4
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	0e 94 4f 01 	call	0x29e	; 0x29e <drawDoggoBone>
		if (i%4 >=2 ){
 2de:	9e 01       	movw	r18, r28
 2e0:	23 70       	andi	r18, 0x03	; 3
 2e2:	30 78       	andi	r19, 0x80	; 128
 2e4:	33 23       	and	r19, r19
 2e6:	34 f4       	brge	.+12     	; 0x2f4 <intro+0x2e>
 2e8:	21 50       	subi	r18, 0x01	; 1
 2ea:	31 09       	sbc	r19, r1
 2ec:	2c 6f       	ori	r18, 0xFC	; 252
 2ee:	3f 6f       	ori	r19, 0xFF	; 255
 2f0:	2f 5f       	subi	r18, 0xFF	; 255
 2f2:	3f 4f       	sbci	r19, 0xFF	; 255
 2f4:	22 30       	cpi	r18, 0x02	; 2
 2f6:	31 05       	cpc	r19, r1
 2f8:	2c f0       	brlt	.+10     	; 0x304 <intro+0x3e>
			drawDoggo(x-i,y);
 2fa:	60 2f       	mov	r22, r16
 2fc:	81 2f       	mov	r24, r17
 2fe:	0e 94 e7 00 	call	0x1ce	; 0x1ce <drawDoggo>
 302:	04 c0       	rjmp	.+8      	; 0x30c <intro+0x46>
		} else {
			drawDoggo2(x-i,y);
 304:	60 2f       	mov	r22, r16
 306:	81 2f       	mov	r24, r17
 308:	0e 94 1b 01 	call	0x236	; 0x236 <drawDoggo2>
 30c:	8f e4       	ldi	r24, 0x4F	; 79
 30e:	93 ec       	ldi	r25, 0xC3	; 195
 310:	01 97       	sbiw	r24, 0x01	; 1
 312:	f1 f7       	brne	.-4      	; 0x310 <intro+0x4a>
 314:	00 c0       	rjmp	.+0      	; 0x316 <intro+0x50>
 316:	00 00       	nop



void intro(uint8_t x, uint8_t y){
/*uint8_t x = 128;*/
	for (int i=0; i<104; i++){
 318:	21 96       	adiw	r28, 0x01	; 1
 31a:	11 50       	subi	r17, 0x01	; 1
 31c:	c8 36       	cpi	r28, 0x68	; 104
 31e:	d1 05       	cpc	r29, r1
 320:	d1 f6       	brne	.-76     	; 0x2d6 <intro+0x10>
			drawDoggo2(x-i,y);
		}
		_delay_ms(200);
	}

};
 322:	df 91       	pop	r29
 324:	cf 91       	pop	r28
 326:	1f 91       	pop	r17
 328:	0f 91       	pop	r16
 32a:	08 95       	ret

0000032c <oled_goto_line>:
}



void oled_goto_line(uint8_t line){
	oled_write_command(0xB0 + line);
 32c:	80 55       	subi	r24, 0x50	; 80

void oled_init(void);


static inline void oled_write_command(char c){
	*external_oled_command = c;
 32e:	80 93 00 10 	sts	0x1000, r24
 332:	08 95       	ret

00000334 <oled_goto_col>:
}

void oled_goto_col(uint8_t col){
	oled_write_command(0x0F & (col));
 334:	98 2f       	mov	r25, r24
 336:	9f 70       	andi	r25, 0x0F	; 15
 338:	e0 e0       	ldi	r30, 0x00	; 0
 33a:	f0 e1       	ldi	r31, 0x10	; 16
 33c:	90 83       	st	Z, r25
	oled_write_command(0x10 | (col>>4));
 33e:	82 95       	swap	r24
 340:	8f 70       	andi	r24, 0x0F	; 15
 342:	80 61       	ori	r24, 0x10	; 16
 344:	80 83       	st	Z, r24
 346:	08 95       	ret

00000348 <oled_home>:
 348:	80 eb       	ldi	r24, 0xB0	; 176
 34a:	80 93 00 10 	sts	0x1000, r24
}

void oled_home(void){
	oled_goto_line(0);
	oled_goto_col(0);
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 9a 01 	call	0x334	; 0x334 <oled_goto_col>
 354:	08 95       	ret

00000356 <oled_pos>:
}



void oled_goto_line(uint8_t line){
	oled_write_command(0xB0 + line);
 356:	80 55       	subi	r24, 0x50	; 80
 358:	80 93 00 10 	sts	0x1000, r24
	oled_goto_col(0);
}

void oled_pos(int line, int col){
	oled_goto_line(line);
	oled_goto_col(col);
 35c:	86 2f       	mov	r24, r22
 35e:	0e 94 9a 01 	call	0x334	; 0x334 <oled_goto_col>
 362:	08 95       	ret

00000364 <oled_clear_line>:
}



void oled_goto_line(uint8_t line){
	oled_write_command(0xB0 + line);
 364:	80 55       	subi	r24, 0x50	; 80
 366:	80 93 00 10 	sts	0x1000, r24
 36a:	80 e8       	ldi	r24, 0x80	; 128
 36c:	90 e0       	ldi	r25, 0x00	; 0
}
static inline void oled_write_data(char d){
	*external_oled_data = d;
 36e:	e0 e0       	ldi	r30, 0x00	; 0
 370:	f2 e1       	ldi	r31, 0x12	; 18
 372:	10 82       	st	Z, r1
 374:	01 97       	sbiw	r24, 0x01	; 1
	oled_goto_col(col);
}

void oled_clear_line(uint8_t line){
	oled_goto_line(line);
	for (int i = 0; i<128; i++){
 376:	00 97       	sbiw	r24, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <oled_clear_line+0xe>
		oled_write_data(0);
	}
	oled_goto_col(0);
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	0e 94 9a 01 	call	0x334	; 0x334 <oled_goto_col>
 380:	08 95       	ret

00000382 <oled_cls>:
}

void oled_cls(void){
 382:	cf 93       	push	r28
 384:	c0 e0       	ldi	r28, 0x00	; 0
	for (int row = 0; row<8; row++){
		oled_clear_line(row);
 386:	8c 2f       	mov	r24, r28
 388:	0e 94 b2 01 	call	0x364	; 0x364 <oled_clear_line>
 38c:	cf 5f       	subi	r28, 0xFF	; 255
	}
	oled_goto_col(0);
}

void oled_cls(void){
	for (int row = 0; row<8; row++){
 38e:	c8 30       	cpi	r28, 0x08	; 8
 390:	d1 f7       	brne	.-12     	; 0x386 <oled_cls+0x4>
		oled_clear_line(row);
	}
	oled_home();
 392:	0e 94 a4 01 	call	0x348	; 0x348 <oled_home>
}
 396:	cf 91       	pop	r28
 398:	08 95       	ret

0000039a <oled_init>:

void oled_init(void);


static inline void oled_write_command(char c){
	*external_oled_command = c;
 39a:	e0 e0       	ldi	r30, 0x00	; 0
 39c:	f0 e1       	ldi	r31, 0x10	; 16
 39e:	8e ea       	ldi	r24, 0xAE	; 174
 3a0:	80 83       	st	Z, r24
 3a2:	81 ea       	ldi	r24, 0xA1	; 161
 3a4:	80 83       	st	Z, r24
 3a6:	8a ed       	ldi	r24, 0xDA	; 218
 3a8:	80 83       	st	Z, r24
 3aa:	82 e1       	ldi	r24, 0x12	; 18
 3ac:	80 83       	st	Z, r24
 3ae:	88 ec       	ldi	r24, 0xC8	; 200
 3b0:	80 83       	st	Z, r24
 3b2:	88 ea       	ldi	r24, 0xA8	; 168
 3b4:	80 83       	st	Z, r24
 3b6:	8f e3       	ldi	r24, 0x3F	; 63
 3b8:	80 83       	st	Z, r24
 3ba:	85 ed       	ldi	r24, 0xD5	; 213
 3bc:	80 83       	st	Z, r24
 3be:	80 e8       	ldi	r24, 0x80	; 128
 3c0:	80 83       	st	Z, r24
 3c2:	81 e8       	ldi	r24, 0x81	; 129
 3c4:	80 83       	st	Z, r24
 3c6:	80 e5       	ldi	r24, 0x50	; 80
 3c8:	80 83       	st	Z, r24
 3ca:	89 ed       	ldi	r24, 0xD9	; 217
 3cc:	80 83       	st	Z, r24
 3ce:	81 e2       	ldi	r24, 0x21	; 33
 3d0:	80 83       	st	Z, r24
 3d2:	80 e2       	ldi	r24, 0x20	; 32
 3d4:	80 83       	st	Z, r24
 3d6:	82 e0       	ldi	r24, 0x02	; 2
 3d8:	80 83       	st	Z, r24
 3da:	8b ed       	ldi	r24, 0xDB	; 219
 3dc:	80 83       	st	Z, r24
 3de:	80 e3       	ldi	r24, 0x30	; 48
 3e0:	80 83       	st	Z, r24
 3e2:	8d ea       	ldi	r24, 0xAD	; 173
 3e4:	80 83       	st	Z, r24
 3e6:	10 82       	st	Z, r1
 3e8:	84 ea       	ldi	r24, 0xA4	; 164
 3ea:	80 83       	st	Z, r24
 3ec:	86 ea       	ldi	r24, 0xA6	; 166
 3ee:	80 83       	st	Z, r24
 3f0:	8f ea       	ldi	r24, 0xAF	; 175
 3f2:	80 83       	st	Z, r24
	oled_write_command(0x00);		 //Horizontal addressing mode
	oled_write_command(0xa4);        //out  follows  RAM  content
	oled_write_command(0xa6);        //set  normal  display
	oled_write_command(0xaf);        //  display  on
	
	oled_cls();
 3f4:	0e 94 c1 01 	call	0x382	; 0x382 <oled_cls>
	oled_home();
 3f8:	0e 94 a4 01 	call	0x348	; 0x348 <oled_home>
 3fc:	08 95       	ret

000003fe <USART_Init>:
 3fe:	90 bd       	out	0x20, r25	; 32
 400:	89 b9       	out	0x09, r24	; 9
 402:	88 e1       	ldi	r24, 0x18	; 24
 404:	8a b9       	out	0x0a, r24	; 10
 406:	8e e8       	ldi	r24, 0x8E	; 142
 408:	80 bd       	out	0x20, r24	; 32
 40a:	08 95       	ret

0000040c <USART_Transmit>:
 40c:	5d 9b       	sbis	0x0b, 5	; 11
 40e:	fe cf       	rjmp	.-4      	; 0x40c <USART_Transmit>
 410:	8c b9       	out	0x0c, r24	; 12
 412:	08 95       	ret

00000414 <USART_Receive>:
 414:	5f 9b       	sbis	0x0b, 7	; 11
 416:	fe cf       	rjmp	.-4      	; 0x414 <USART_Receive>
 418:	8c b1       	in	r24, 0x0c	; 12
 41a:	08 95       	ret

0000041c <fdevopen>:
 41c:	0f 93       	push	r16
 41e:	1f 93       	push	r17
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
 424:	ec 01       	movw	r28, r24
 426:	8b 01       	movw	r16, r22
 428:	00 97       	sbiw	r24, 0x00	; 0
 42a:	31 f4       	brne	.+12     	; 0x438 <fdevopen+0x1c>
 42c:	61 15       	cp	r22, r1
 42e:	71 05       	cpc	r23, r1
 430:	19 f4       	brne	.+6      	; 0x438 <fdevopen+0x1c>
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	38 c0       	rjmp	.+112    	; 0x4a8 <fdevopen+0x8c>
 438:	6e e0       	ldi	r22, 0x0E	; 14
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 3f 04 	call	0x87e	; 0x87e <calloc>
 444:	fc 01       	movw	r30, r24
 446:	00 97       	sbiw	r24, 0x00	; 0
 448:	a1 f3       	breq	.-24     	; 0x432 <fdevopen+0x16>
 44a:	80 e8       	ldi	r24, 0x80	; 128
 44c:	83 83       	std	Z+3, r24	; 0x03
 44e:	01 15       	cp	r16, r1
 450:	11 05       	cpc	r17, r1
 452:	71 f0       	breq	.+28     	; 0x470 <fdevopen+0x54>
 454:	13 87       	std	Z+11, r17	; 0x0b
 456:	02 87       	std	Z+10, r16	; 0x0a
 458:	81 e8       	ldi	r24, 0x81	; 129
 45a:	83 83       	std	Z+3, r24	; 0x03
 45c:	80 91 0c 01 	lds	r24, 0x010C
 460:	90 91 0d 01 	lds	r25, 0x010D
 464:	89 2b       	or	r24, r25
 466:	21 f4       	brne	.+8      	; 0x470 <fdevopen+0x54>
 468:	f0 93 0d 01 	sts	0x010D, r31
 46c:	e0 93 0c 01 	sts	0x010C, r30
 470:	20 97       	sbiw	r28, 0x00	; 0
 472:	c9 f0       	breq	.+50     	; 0x4a6 <fdevopen+0x8a>
 474:	d1 87       	std	Z+9, r29	; 0x09
 476:	c0 87       	std	Z+8, r28	; 0x08
 478:	83 81       	ldd	r24, Z+3	; 0x03
 47a:	82 60       	ori	r24, 0x02	; 2
 47c:	83 83       	std	Z+3, r24	; 0x03
 47e:	80 91 0e 01 	lds	r24, 0x010E
 482:	90 91 0f 01 	lds	r25, 0x010F
 486:	89 2b       	or	r24, r25
 488:	71 f4       	brne	.+28     	; 0x4a6 <fdevopen+0x8a>
 48a:	f0 93 0f 01 	sts	0x010F, r31
 48e:	e0 93 0e 01 	sts	0x010E, r30
 492:	80 91 10 01 	lds	r24, 0x0110
 496:	90 91 11 01 	lds	r25, 0x0111
 49a:	89 2b       	or	r24, r25
 49c:	21 f4       	brne	.+8      	; 0x4a6 <fdevopen+0x8a>
 49e:	f0 93 11 01 	sts	0x0111, r31
 4a2:	e0 93 10 01 	sts	0x0110, r30
 4a6:	cf 01       	movw	r24, r30
 4a8:	df 91       	pop	r29
 4aa:	cf 91       	pop	r28
 4ac:	1f 91       	pop	r17
 4ae:	0f 91       	pop	r16
 4b0:	08 95       	ret

000004b2 <printf>:
 4b2:	a0 e0       	ldi	r26, 0x00	; 0
 4b4:	b0 e0       	ldi	r27, 0x00	; 0
 4b6:	ef e5       	ldi	r30, 0x5F	; 95
 4b8:	f2 e0       	ldi	r31, 0x02	; 2
 4ba:	0c 94 3f 06 	jmp	0xc7e	; 0xc7e <__prologue_saves__+0x20>
 4be:	fe 01       	movw	r30, r28
 4c0:	35 96       	adiw	r30, 0x05	; 5
 4c2:	61 91       	ld	r22, Z+
 4c4:	71 91       	ld	r23, Z+
 4c6:	af 01       	movw	r20, r30
 4c8:	80 91 0e 01 	lds	r24, 0x010E
 4cc:	90 91 0f 01 	lds	r25, 0x010F
 4d0:	0e 94 6d 02 	call	0x4da	; 0x4da <vfprintf>
 4d4:	e2 e0       	ldi	r30, 0x02	; 2
 4d6:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__epilogue_restores__+0x20>

000004da <vfprintf>:
 4da:	ac e0       	ldi	r26, 0x0C	; 12
 4dc:	b0 e0       	ldi	r27, 0x00	; 0
 4de:	e3 e7       	ldi	r30, 0x73	; 115
 4e0:	f2 e0       	ldi	r31, 0x02	; 2
 4e2:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__prologue_saves__>
 4e6:	7c 01       	movw	r14, r24
 4e8:	6b 01       	movw	r12, r22
 4ea:	8a 01       	movw	r16, r20
 4ec:	fc 01       	movw	r30, r24
 4ee:	17 82       	std	Z+7, r1	; 0x07
 4f0:	16 82       	std	Z+6, r1	; 0x06
 4f2:	83 81       	ldd	r24, Z+3	; 0x03
 4f4:	81 ff       	sbrs	r24, 1
 4f6:	bd c1       	rjmp	.+890    	; 0x872 <__stack+0x373>
 4f8:	ce 01       	movw	r24, r28
 4fa:	01 96       	adiw	r24, 0x01	; 1
 4fc:	4c 01       	movw	r8, r24
 4fe:	f7 01       	movw	r30, r14
 500:	93 81       	ldd	r25, Z+3	; 0x03
 502:	f6 01       	movw	r30, r12
 504:	93 fd       	sbrc	r25, 3
 506:	85 91       	lpm	r24, Z+
 508:	93 ff       	sbrs	r25, 3
 50a:	81 91       	ld	r24, Z+
 50c:	6f 01       	movw	r12, r30
 50e:	88 23       	and	r24, r24
 510:	09 f4       	brne	.+2      	; 0x514 <__stack+0x15>
 512:	ab c1       	rjmp	.+854    	; 0x86a <__stack+0x36b>
 514:	85 32       	cpi	r24, 0x25	; 37
 516:	39 f4       	brne	.+14     	; 0x526 <__stack+0x27>
 518:	93 fd       	sbrc	r25, 3
 51a:	85 91       	lpm	r24, Z+
 51c:	93 ff       	sbrs	r25, 3
 51e:	81 91       	ld	r24, Z+
 520:	6f 01       	movw	r12, r30
 522:	85 32       	cpi	r24, 0x25	; 37
 524:	29 f4       	brne	.+10     	; 0x530 <__stack+0x31>
 526:	b7 01       	movw	r22, r14
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 52e:	e7 cf       	rjmp	.-50     	; 0x4fe <vfprintf+0x24>
 530:	51 2c       	mov	r5, r1
 532:	31 2c       	mov	r3, r1
 534:	20 e0       	ldi	r18, 0x00	; 0
 536:	20 32       	cpi	r18, 0x20	; 32
 538:	a0 f4       	brcc	.+40     	; 0x562 <__stack+0x63>
 53a:	8b 32       	cpi	r24, 0x2B	; 43
 53c:	69 f0       	breq	.+26     	; 0x558 <__stack+0x59>
 53e:	30 f4       	brcc	.+12     	; 0x54c <__stack+0x4d>
 540:	80 32       	cpi	r24, 0x20	; 32
 542:	59 f0       	breq	.+22     	; 0x55a <__stack+0x5b>
 544:	83 32       	cpi	r24, 0x23	; 35
 546:	69 f4       	brne	.+26     	; 0x562 <__stack+0x63>
 548:	20 61       	ori	r18, 0x10	; 16
 54a:	2c c0       	rjmp	.+88     	; 0x5a4 <__stack+0xa5>
 54c:	8d 32       	cpi	r24, 0x2D	; 45
 54e:	39 f0       	breq	.+14     	; 0x55e <__stack+0x5f>
 550:	80 33       	cpi	r24, 0x30	; 48
 552:	39 f4       	brne	.+14     	; 0x562 <__stack+0x63>
 554:	21 60       	ori	r18, 0x01	; 1
 556:	26 c0       	rjmp	.+76     	; 0x5a4 <__stack+0xa5>
 558:	22 60       	ori	r18, 0x02	; 2
 55a:	24 60       	ori	r18, 0x04	; 4
 55c:	23 c0       	rjmp	.+70     	; 0x5a4 <__stack+0xa5>
 55e:	28 60       	ori	r18, 0x08	; 8
 560:	21 c0       	rjmp	.+66     	; 0x5a4 <__stack+0xa5>
 562:	27 fd       	sbrc	r18, 7
 564:	27 c0       	rjmp	.+78     	; 0x5b4 <__stack+0xb5>
 566:	30 ed       	ldi	r19, 0xD0	; 208
 568:	38 0f       	add	r19, r24
 56a:	3a 30       	cpi	r19, 0x0A	; 10
 56c:	78 f4       	brcc	.+30     	; 0x58c <__stack+0x8d>
 56e:	26 ff       	sbrs	r18, 6
 570:	06 c0       	rjmp	.+12     	; 0x57e <__stack+0x7f>
 572:	fa e0       	ldi	r31, 0x0A	; 10
 574:	5f 9e       	mul	r5, r31
 576:	30 0d       	add	r19, r0
 578:	11 24       	eor	r1, r1
 57a:	53 2e       	mov	r5, r19
 57c:	13 c0       	rjmp	.+38     	; 0x5a4 <__stack+0xa5>
 57e:	8a e0       	ldi	r24, 0x0A	; 10
 580:	38 9e       	mul	r3, r24
 582:	30 0d       	add	r19, r0
 584:	11 24       	eor	r1, r1
 586:	33 2e       	mov	r3, r19
 588:	20 62       	ori	r18, 0x20	; 32
 58a:	0c c0       	rjmp	.+24     	; 0x5a4 <__stack+0xa5>
 58c:	8e 32       	cpi	r24, 0x2E	; 46
 58e:	21 f4       	brne	.+8      	; 0x598 <__stack+0x99>
 590:	26 fd       	sbrc	r18, 6
 592:	6b c1       	rjmp	.+726    	; 0x86a <__stack+0x36b>
 594:	20 64       	ori	r18, 0x40	; 64
 596:	06 c0       	rjmp	.+12     	; 0x5a4 <__stack+0xa5>
 598:	8c 36       	cpi	r24, 0x6C	; 108
 59a:	11 f4       	brne	.+4      	; 0x5a0 <__stack+0xa1>
 59c:	20 68       	ori	r18, 0x80	; 128
 59e:	02 c0       	rjmp	.+4      	; 0x5a4 <__stack+0xa5>
 5a0:	88 36       	cpi	r24, 0x68	; 104
 5a2:	41 f4       	brne	.+16     	; 0x5b4 <__stack+0xb5>
 5a4:	f6 01       	movw	r30, r12
 5a6:	93 fd       	sbrc	r25, 3
 5a8:	85 91       	lpm	r24, Z+
 5aa:	93 ff       	sbrs	r25, 3
 5ac:	81 91       	ld	r24, Z+
 5ae:	6f 01       	movw	r12, r30
 5b0:	81 11       	cpse	r24, r1
 5b2:	c1 cf       	rjmp	.-126    	; 0x536 <__stack+0x37>
 5b4:	98 2f       	mov	r25, r24
 5b6:	9f 7d       	andi	r25, 0xDF	; 223
 5b8:	95 54       	subi	r25, 0x45	; 69
 5ba:	93 30       	cpi	r25, 0x03	; 3
 5bc:	28 f4       	brcc	.+10     	; 0x5c8 <__stack+0xc9>
 5be:	0c 5f       	subi	r16, 0xFC	; 252
 5c0:	1f 4f       	sbci	r17, 0xFF	; 255
 5c2:	ff e3       	ldi	r31, 0x3F	; 63
 5c4:	f9 83       	std	Y+1, r31	; 0x01
 5c6:	0d c0       	rjmp	.+26     	; 0x5e2 <__stack+0xe3>
 5c8:	83 36       	cpi	r24, 0x63	; 99
 5ca:	31 f0       	breq	.+12     	; 0x5d8 <__stack+0xd9>
 5cc:	83 37       	cpi	r24, 0x73	; 115
 5ce:	71 f0       	breq	.+28     	; 0x5ec <__stack+0xed>
 5d0:	83 35       	cpi	r24, 0x53	; 83
 5d2:	09 f0       	breq	.+2      	; 0x5d6 <__stack+0xd7>
 5d4:	5b c0       	rjmp	.+182    	; 0x68c <__stack+0x18d>
 5d6:	22 c0       	rjmp	.+68     	; 0x61c <__stack+0x11d>
 5d8:	f8 01       	movw	r30, r16
 5da:	80 81       	ld	r24, Z
 5dc:	89 83       	std	Y+1, r24	; 0x01
 5de:	0e 5f       	subi	r16, 0xFE	; 254
 5e0:	1f 4f       	sbci	r17, 0xFF	; 255
 5e2:	44 24       	eor	r4, r4
 5e4:	43 94       	inc	r4
 5e6:	51 2c       	mov	r5, r1
 5e8:	54 01       	movw	r10, r8
 5ea:	15 c0       	rjmp	.+42     	; 0x616 <__stack+0x117>
 5ec:	38 01       	movw	r6, r16
 5ee:	f2 e0       	ldi	r31, 0x02	; 2
 5f0:	6f 0e       	add	r6, r31
 5f2:	71 1c       	adc	r7, r1
 5f4:	f8 01       	movw	r30, r16
 5f6:	a0 80       	ld	r10, Z
 5f8:	b1 80       	ldd	r11, Z+1	; 0x01
 5fa:	26 ff       	sbrs	r18, 6
 5fc:	03 c0       	rjmp	.+6      	; 0x604 <__stack+0x105>
 5fe:	65 2d       	mov	r22, r5
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	02 c0       	rjmp	.+4      	; 0x608 <__stack+0x109>
 604:	6f ef       	ldi	r22, 0xFF	; 255
 606:	7f ef       	ldi	r23, 0xFF	; 255
 608:	c5 01       	movw	r24, r10
 60a:	2c 87       	std	Y+12, r18	; 0x0c
 60c:	0e 94 94 05 	call	0xb28	; 0xb28 <strnlen>
 610:	2c 01       	movw	r4, r24
 612:	83 01       	movw	r16, r6
 614:	2c 85       	ldd	r18, Y+12	; 0x0c
 616:	2f 77       	andi	r18, 0x7F	; 127
 618:	22 2e       	mov	r2, r18
 61a:	17 c0       	rjmp	.+46     	; 0x64a <__stack+0x14b>
 61c:	38 01       	movw	r6, r16
 61e:	f2 e0       	ldi	r31, 0x02	; 2
 620:	6f 0e       	add	r6, r31
 622:	71 1c       	adc	r7, r1
 624:	f8 01       	movw	r30, r16
 626:	a0 80       	ld	r10, Z
 628:	b1 80       	ldd	r11, Z+1	; 0x01
 62a:	26 ff       	sbrs	r18, 6
 62c:	03 c0       	rjmp	.+6      	; 0x634 <__stack+0x135>
 62e:	65 2d       	mov	r22, r5
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	02 c0       	rjmp	.+4      	; 0x638 <__stack+0x139>
 634:	6f ef       	ldi	r22, 0xFF	; 255
 636:	7f ef       	ldi	r23, 0xFF	; 255
 638:	c5 01       	movw	r24, r10
 63a:	2c 87       	std	Y+12, r18	; 0x0c
 63c:	0e 94 82 05 	call	0xb04	; 0xb04 <strnlen_P>
 640:	2c 01       	movw	r4, r24
 642:	2c 85       	ldd	r18, Y+12	; 0x0c
 644:	20 68       	ori	r18, 0x80	; 128
 646:	22 2e       	mov	r2, r18
 648:	83 01       	movw	r16, r6
 64a:	23 fc       	sbrc	r2, 3
 64c:	1b c0       	rjmp	.+54     	; 0x684 <__stack+0x185>
 64e:	83 2d       	mov	r24, r3
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	48 16       	cp	r4, r24
 654:	59 06       	cpc	r5, r25
 656:	b0 f4       	brcc	.+44     	; 0x684 <__stack+0x185>
 658:	b7 01       	movw	r22, r14
 65a:	80 e2       	ldi	r24, 0x20	; 32
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 662:	3a 94       	dec	r3
 664:	f4 cf       	rjmp	.-24     	; 0x64e <__stack+0x14f>
 666:	f5 01       	movw	r30, r10
 668:	27 fc       	sbrc	r2, 7
 66a:	85 91       	lpm	r24, Z+
 66c:	27 fe       	sbrs	r2, 7
 66e:	81 91       	ld	r24, Z+
 670:	5f 01       	movw	r10, r30
 672:	b7 01       	movw	r22, r14
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 67a:	31 10       	cpse	r3, r1
 67c:	3a 94       	dec	r3
 67e:	f1 e0       	ldi	r31, 0x01	; 1
 680:	4f 1a       	sub	r4, r31
 682:	51 08       	sbc	r5, r1
 684:	41 14       	cp	r4, r1
 686:	51 04       	cpc	r5, r1
 688:	71 f7       	brne	.-36     	; 0x666 <__stack+0x167>
 68a:	e5 c0       	rjmp	.+458    	; 0x856 <__stack+0x357>
 68c:	84 36       	cpi	r24, 0x64	; 100
 68e:	11 f0       	breq	.+4      	; 0x694 <__stack+0x195>
 690:	89 36       	cpi	r24, 0x69	; 105
 692:	39 f5       	brne	.+78     	; 0x6e2 <__stack+0x1e3>
 694:	f8 01       	movw	r30, r16
 696:	27 ff       	sbrs	r18, 7
 698:	07 c0       	rjmp	.+14     	; 0x6a8 <__stack+0x1a9>
 69a:	60 81       	ld	r22, Z
 69c:	71 81       	ldd	r23, Z+1	; 0x01
 69e:	82 81       	ldd	r24, Z+2	; 0x02
 6a0:	93 81       	ldd	r25, Z+3	; 0x03
 6a2:	0c 5f       	subi	r16, 0xFC	; 252
 6a4:	1f 4f       	sbci	r17, 0xFF	; 255
 6a6:	08 c0       	rjmp	.+16     	; 0x6b8 <__stack+0x1b9>
 6a8:	60 81       	ld	r22, Z
 6aa:	71 81       	ldd	r23, Z+1	; 0x01
 6ac:	88 27       	eor	r24, r24
 6ae:	77 fd       	sbrc	r23, 7
 6b0:	80 95       	com	r24
 6b2:	98 2f       	mov	r25, r24
 6b4:	0e 5f       	subi	r16, 0xFE	; 254
 6b6:	1f 4f       	sbci	r17, 0xFF	; 255
 6b8:	2f 76       	andi	r18, 0x6F	; 111
 6ba:	b2 2e       	mov	r11, r18
 6bc:	97 ff       	sbrs	r25, 7
 6be:	09 c0       	rjmp	.+18     	; 0x6d2 <__stack+0x1d3>
 6c0:	90 95       	com	r25
 6c2:	80 95       	com	r24
 6c4:	70 95       	com	r23
 6c6:	61 95       	neg	r22
 6c8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ca:	8f 4f       	sbci	r24, 0xFF	; 255
 6cc:	9f 4f       	sbci	r25, 0xFF	; 255
 6ce:	20 68       	ori	r18, 0x80	; 128
 6d0:	b2 2e       	mov	r11, r18
 6d2:	2a e0       	ldi	r18, 0x0A	; 10
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	a4 01       	movw	r20, r8
 6d8:	0e 94 d1 05 	call	0xba2	; 0xba2 <__ultoa_invert>
 6dc:	a8 2e       	mov	r10, r24
 6de:	a8 18       	sub	r10, r8
 6e0:	44 c0       	rjmp	.+136    	; 0x76a <__stack+0x26b>
 6e2:	85 37       	cpi	r24, 0x75	; 117
 6e4:	29 f4       	brne	.+10     	; 0x6f0 <__stack+0x1f1>
 6e6:	2f 7e       	andi	r18, 0xEF	; 239
 6e8:	b2 2e       	mov	r11, r18
 6ea:	2a e0       	ldi	r18, 0x0A	; 10
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	25 c0       	rjmp	.+74     	; 0x73a <__stack+0x23b>
 6f0:	f2 2f       	mov	r31, r18
 6f2:	f9 7f       	andi	r31, 0xF9	; 249
 6f4:	bf 2e       	mov	r11, r31
 6f6:	8f 36       	cpi	r24, 0x6F	; 111
 6f8:	c1 f0       	breq	.+48     	; 0x72a <__stack+0x22b>
 6fa:	18 f4       	brcc	.+6      	; 0x702 <__stack+0x203>
 6fc:	88 35       	cpi	r24, 0x58	; 88
 6fe:	79 f0       	breq	.+30     	; 0x71e <__stack+0x21f>
 700:	b4 c0       	rjmp	.+360    	; 0x86a <__stack+0x36b>
 702:	80 37       	cpi	r24, 0x70	; 112
 704:	19 f0       	breq	.+6      	; 0x70c <__stack+0x20d>
 706:	88 37       	cpi	r24, 0x78	; 120
 708:	21 f0       	breq	.+8      	; 0x712 <__stack+0x213>
 70a:	af c0       	rjmp	.+350    	; 0x86a <__stack+0x36b>
 70c:	2f 2f       	mov	r18, r31
 70e:	20 61       	ori	r18, 0x10	; 16
 710:	b2 2e       	mov	r11, r18
 712:	b4 fe       	sbrs	r11, 4
 714:	0d c0       	rjmp	.+26     	; 0x730 <__stack+0x231>
 716:	8b 2d       	mov	r24, r11
 718:	84 60       	ori	r24, 0x04	; 4
 71a:	b8 2e       	mov	r11, r24
 71c:	09 c0       	rjmp	.+18     	; 0x730 <__stack+0x231>
 71e:	24 ff       	sbrs	r18, 4
 720:	0a c0       	rjmp	.+20     	; 0x736 <__stack+0x237>
 722:	9f 2f       	mov	r25, r31
 724:	96 60       	ori	r25, 0x06	; 6
 726:	b9 2e       	mov	r11, r25
 728:	06 c0       	rjmp	.+12     	; 0x736 <__stack+0x237>
 72a:	28 e0       	ldi	r18, 0x08	; 8
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	05 c0       	rjmp	.+10     	; 0x73a <__stack+0x23b>
 730:	20 e1       	ldi	r18, 0x10	; 16
 732:	30 e0       	ldi	r19, 0x00	; 0
 734:	02 c0       	rjmp	.+4      	; 0x73a <__stack+0x23b>
 736:	20 e1       	ldi	r18, 0x10	; 16
 738:	32 e0       	ldi	r19, 0x02	; 2
 73a:	f8 01       	movw	r30, r16
 73c:	b7 fe       	sbrs	r11, 7
 73e:	07 c0       	rjmp	.+14     	; 0x74e <__stack+0x24f>
 740:	60 81       	ld	r22, Z
 742:	71 81       	ldd	r23, Z+1	; 0x01
 744:	82 81       	ldd	r24, Z+2	; 0x02
 746:	93 81       	ldd	r25, Z+3	; 0x03
 748:	0c 5f       	subi	r16, 0xFC	; 252
 74a:	1f 4f       	sbci	r17, 0xFF	; 255
 74c:	06 c0       	rjmp	.+12     	; 0x75a <__stack+0x25b>
 74e:	60 81       	ld	r22, Z
 750:	71 81       	ldd	r23, Z+1	; 0x01
 752:	80 e0       	ldi	r24, 0x00	; 0
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	0e 5f       	subi	r16, 0xFE	; 254
 758:	1f 4f       	sbci	r17, 0xFF	; 255
 75a:	a4 01       	movw	r20, r8
 75c:	0e 94 d1 05 	call	0xba2	; 0xba2 <__ultoa_invert>
 760:	a8 2e       	mov	r10, r24
 762:	a8 18       	sub	r10, r8
 764:	fb 2d       	mov	r31, r11
 766:	ff 77       	andi	r31, 0x7F	; 127
 768:	bf 2e       	mov	r11, r31
 76a:	b6 fe       	sbrs	r11, 6
 76c:	0b c0       	rjmp	.+22     	; 0x784 <__stack+0x285>
 76e:	2b 2d       	mov	r18, r11
 770:	2e 7f       	andi	r18, 0xFE	; 254
 772:	a5 14       	cp	r10, r5
 774:	50 f4       	brcc	.+20     	; 0x78a <__stack+0x28b>
 776:	b4 fe       	sbrs	r11, 4
 778:	0a c0       	rjmp	.+20     	; 0x78e <__stack+0x28f>
 77a:	b2 fc       	sbrc	r11, 2
 77c:	08 c0       	rjmp	.+16     	; 0x78e <__stack+0x28f>
 77e:	2b 2d       	mov	r18, r11
 780:	2e 7e       	andi	r18, 0xEE	; 238
 782:	05 c0       	rjmp	.+10     	; 0x78e <__stack+0x28f>
 784:	7a 2c       	mov	r7, r10
 786:	2b 2d       	mov	r18, r11
 788:	03 c0       	rjmp	.+6      	; 0x790 <__stack+0x291>
 78a:	7a 2c       	mov	r7, r10
 78c:	01 c0       	rjmp	.+2      	; 0x790 <__stack+0x291>
 78e:	75 2c       	mov	r7, r5
 790:	24 ff       	sbrs	r18, 4
 792:	0d c0       	rjmp	.+26     	; 0x7ae <__stack+0x2af>
 794:	fe 01       	movw	r30, r28
 796:	ea 0d       	add	r30, r10
 798:	f1 1d       	adc	r31, r1
 79a:	80 81       	ld	r24, Z
 79c:	80 33       	cpi	r24, 0x30	; 48
 79e:	11 f4       	brne	.+4      	; 0x7a4 <__stack+0x2a5>
 7a0:	29 7e       	andi	r18, 0xE9	; 233
 7a2:	09 c0       	rjmp	.+18     	; 0x7b6 <__stack+0x2b7>
 7a4:	22 ff       	sbrs	r18, 2
 7a6:	06 c0       	rjmp	.+12     	; 0x7b4 <__stack+0x2b5>
 7a8:	73 94       	inc	r7
 7aa:	73 94       	inc	r7
 7ac:	04 c0       	rjmp	.+8      	; 0x7b6 <__stack+0x2b7>
 7ae:	82 2f       	mov	r24, r18
 7b0:	86 78       	andi	r24, 0x86	; 134
 7b2:	09 f0       	breq	.+2      	; 0x7b6 <__stack+0x2b7>
 7b4:	73 94       	inc	r7
 7b6:	23 fd       	sbrc	r18, 3
 7b8:	13 c0       	rjmp	.+38     	; 0x7e0 <__stack+0x2e1>
 7ba:	20 ff       	sbrs	r18, 0
 7bc:	06 c0       	rjmp	.+12     	; 0x7ca <__stack+0x2cb>
 7be:	5a 2c       	mov	r5, r10
 7c0:	73 14       	cp	r7, r3
 7c2:	18 f4       	brcc	.+6      	; 0x7ca <__stack+0x2cb>
 7c4:	53 0c       	add	r5, r3
 7c6:	57 18       	sub	r5, r7
 7c8:	73 2c       	mov	r7, r3
 7ca:	73 14       	cp	r7, r3
 7cc:	68 f4       	brcc	.+26     	; 0x7e8 <__stack+0x2e9>
 7ce:	b7 01       	movw	r22, r14
 7d0:	80 e2       	ldi	r24, 0x20	; 32
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	2c 87       	std	Y+12, r18	; 0x0c
 7d6:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 7da:	73 94       	inc	r7
 7dc:	2c 85       	ldd	r18, Y+12	; 0x0c
 7de:	f5 cf       	rjmp	.-22     	; 0x7ca <__stack+0x2cb>
 7e0:	73 14       	cp	r7, r3
 7e2:	10 f4       	brcc	.+4      	; 0x7e8 <__stack+0x2e9>
 7e4:	37 18       	sub	r3, r7
 7e6:	01 c0       	rjmp	.+2      	; 0x7ea <__stack+0x2eb>
 7e8:	31 2c       	mov	r3, r1
 7ea:	24 ff       	sbrs	r18, 4
 7ec:	12 c0       	rjmp	.+36     	; 0x812 <__stack+0x313>
 7ee:	b7 01       	movw	r22, r14
 7f0:	80 e3       	ldi	r24, 0x30	; 48
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	2c 87       	std	Y+12, r18	; 0x0c
 7f6:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 7fa:	2c 85       	ldd	r18, Y+12	; 0x0c
 7fc:	22 ff       	sbrs	r18, 2
 7fe:	17 c0       	rjmp	.+46     	; 0x82e <__stack+0x32f>
 800:	21 ff       	sbrs	r18, 1
 802:	03 c0       	rjmp	.+6      	; 0x80a <__stack+0x30b>
 804:	88 e5       	ldi	r24, 0x58	; 88
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	02 c0       	rjmp	.+4      	; 0x80e <__stack+0x30f>
 80a:	88 e7       	ldi	r24, 0x78	; 120
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	b7 01       	movw	r22, r14
 810:	0c c0       	rjmp	.+24     	; 0x82a <__stack+0x32b>
 812:	82 2f       	mov	r24, r18
 814:	86 78       	andi	r24, 0x86	; 134
 816:	59 f0       	breq	.+22     	; 0x82e <__stack+0x32f>
 818:	21 fd       	sbrc	r18, 1
 81a:	02 c0       	rjmp	.+4      	; 0x820 <__stack+0x321>
 81c:	80 e2       	ldi	r24, 0x20	; 32
 81e:	01 c0       	rjmp	.+2      	; 0x822 <__stack+0x323>
 820:	8b e2       	ldi	r24, 0x2B	; 43
 822:	27 fd       	sbrc	r18, 7
 824:	8d e2       	ldi	r24, 0x2D	; 45
 826:	b7 01       	movw	r22, r14
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 82e:	a5 14       	cp	r10, r5
 830:	38 f4       	brcc	.+14     	; 0x840 <__stack+0x341>
 832:	b7 01       	movw	r22, r14
 834:	80 e3       	ldi	r24, 0x30	; 48
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 83c:	5a 94       	dec	r5
 83e:	f7 cf       	rjmp	.-18     	; 0x82e <__stack+0x32f>
 840:	aa 94       	dec	r10
 842:	f4 01       	movw	r30, r8
 844:	ea 0d       	add	r30, r10
 846:	f1 1d       	adc	r31, r1
 848:	80 81       	ld	r24, Z
 84a:	b7 01       	movw	r22, r14
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 852:	a1 10       	cpse	r10, r1
 854:	f5 cf       	rjmp	.-22     	; 0x840 <__stack+0x341>
 856:	33 20       	and	r3, r3
 858:	09 f4       	brne	.+2      	; 0x85c <__stack+0x35d>
 85a:	51 ce       	rjmp	.-862    	; 0x4fe <vfprintf+0x24>
 85c:	b7 01       	movw	r22, r14
 85e:	80 e2       	ldi	r24, 0x20	; 32
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	0e 94 9f 05 	call	0xb3e	; 0xb3e <fputc>
 866:	3a 94       	dec	r3
 868:	f6 cf       	rjmp	.-20     	; 0x856 <__stack+0x357>
 86a:	f7 01       	movw	r30, r14
 86c:	86 81       	ldd	r24, Z+6	; 0x06
 86e:	97 81       	ldd	r25, Z+7	; 0x07
 870:	02 c0       	rjmp	.+4      	; 0x876 <__stack+0x377>
 872:	8f ef       	ldi	r24, 0xFF	; 255
 874:	9f ef       	ldi	r25, 0xFF	; 255
 876:	2c 96       	adiw	r28, 0x0c	; 12
 878:	e2 e1       	ldi	r30, 0x12	; 18
 87a:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__epilogue_restores__>

0000087e <calloc>:
 87e:	0f 93       	push	r16
 880:	1f 93       	push	r17
 882:	cf 93       	push	r28
 884:	df 93       	push	r29
 886:	86 9f       	mul	r24, r22
 888:	80 01       	movw	r16, r0
 88a:	87 9f       	mul	r24, r23
 88c:	10 0d       	add	r17, r0
 88e:	96 9f       	mul	r25, r22
 890:	10 0d       	add	r17, r0
 892:	11 24       	eor	r1, r1
 894:	c8 01       	movw	r24, r16
 896:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <malloc>
 89a:	ec 01       	movw	r28, r24
 89c:	00 97       	sbiw	r24, 0x00	; 0
 89e:	29 f0       	breq	.+10     	; 0x8aa <calloc+0x2c>
 8a0:	a8 01       	movw	r20, r16
 8a2:	60 e0       	ldi	r22, 0x00	; 0
 8a4:	70 e0       	ldi	r23, 0x00	; 0
 8a6:	0e 94 8d 05 	call	0xb1a	; 0xb1a <memset>
 8aa:	ce 01       	movw	r24, r28
 8ac:	df 91       	pop	r29
 8ae:	cf 91       	pop	r28
 8b0:	1f 91       	pop	r17
 8b2:	0f 91       	pop	r16
 8b4:	08 95       	ret

000008b6 <malloc>:
 8b6:	cf 93       	push	r28
 8b8:	df 93       	push	r29
 8ba:	82 30       	cpi	r24, 0x02	; 2
 8bc:	91 05       	cpc	r25, r1
 8be:	10 f4       	brcc	.+4      	; 0x8c4 <malloc+0xe>
 8c0:	82 e0       	ldi	r24, 0x02	; 2
 8c2:	90 e0       	ldi	r25, 0x00	; 0
 8c4:	e0 91 14 01 	lds	r30, 0x0114
 8c8:	f0 91 15 01 	lds	r31, 0x0115
 8cc:	20 e0       	ldi	r18, 0x00	; 0
 8ce:	30 e0       	ldi	r19, 0x00	; 0
 8d0:	a0 e0       	ldi	r26, 0x00	; 0
 8d2:	b0 e0       	ldi	r27, 0x00	; 0
 8d4:	30 97       	sbiw	r30, 0x00	; 0
 8d6:	39 f1       	breq	.+78     	; 0x926 <malloc+0x70>
 8d8:	40 81       	ld	r20, Z
 8da:	51 81       	ldd	r21, Z+1	; 0x01
 8dc:	48 17       	cp	r20, r24
 8de:	59 07       	cpc	r21, r25
 8e0:	b8 f0       	brcs	.+46     	; 0x910 <malloc+0x5a>
 8e2:	48 17       	cp	r20, r24
 8e4:	59 07       	cpc	r21, r25
 8e6:	71 f4       	brne	.+28     	; 0x904 <malloc+0x4e>
 8e8:	82 81       	ldd	r24, Z+2	; 0x02
 8ea:	93 81       	ldd	r25, Z+3	; 0x03
 8ec:	10 97       	sbiw	r26, 0x00	; 0
 8ee:	29 f0       	breq	.+10     	; 0x8fa <malloc+0x44>
 8f0:	13 96       	adiw	r26, 0x03	; 3
 8f2:	9c 93       	st	X, r25
 8f4:	8e 93       	st	-X, r24
 8f6:	12 97       	sbiw	r26, 0x02	; 2
 8f8:	2c c0       	rjmp	.+88     	; 0x952 <malloc+0x9c>
 8fa:	90 93 15 01 	sts	0x0115, r25
 8fe:	80 93 14 01 	sts	0x0114, r24
 902:	27 c0       	rjmp	.+78     	; 0x952 <malloc+0x9c>
 904:	21 15       	cp	r18, r1
 906:	31 05       	cpc	r19, r1
 908:	31 f0       	breq	.+12     	; 0x916 <malloc+0x60>
 90a:	42 17       	cp	r20, r18
 90c:	53 07       	cpc	r21, r19
 90e:	18 f0       	brcs	.+6      	; 0x916 <malloc+0x60>
 910:	a9 01       	movw	r20, r18
 912:	db 01       	movw	r26, r22
 914:	01 c0       	rjmp	.+2      	; 0x918 <malloc+0x62>
 916:	ef 01       	movw	r28, r30
 918:	9a 01       	movw	r18, r20
 91a:	bd 01       	movw	r22, r26
 91c:	df 01       	movw	r26, r30
 91e:	02 80       	ldd	r0, Z+2	; 0x02
 920:	f3 81       	ldd	r31, Z+3	; 0x03
 922:	e0 2d       	mov	r30, r0
 924:	d7 cf       	rjmp	.-82     	; 0x8d4 <malloc+0x1e>
 926:	21 15       	cp	r18, r1
 928:	31 05       	cpc	r19, r1
 92a:	f9 f0       	breq	.+62     	; 0x96a <malloc+0xb4>
 92c:	28 1b       	sub	r18, r24
 92e:	39 0b       	sbc	r19, r25
 930:	24 30       	cpi	r18, 0x04	; 4
 932:	31 05       	cpc	r19, r1
 934:	80 f4       	brcc	.+32     	; 0x956 <malloc+0xa0>
 936:	8a 81       	ldd	r24, Y+2	; 0x02
 938:	9b 81       	ldd	r25, Y+3	; 0x03
 93a:	61 15       	cp	r22, r1
 93c:	71 05       	cpc	r23, r1
 93e:	21 f0       	breq	.+8      	; 0x948 <malloc+0x92>
 940:	fb 01       	movw	r30, r22
 942:	93 83       	std	Z+3, r25	; 0x03
 944:	82 83       	std	Z+2, r24	; 0x02
 946:	04 c0       	rjmp	.+8      	; 0x950 <malloc+0x9a>
 948:	90 93 15 01 	sts	0x0115, r25
 94c:	80 93 14 01 	sts	0x0114, r24
 950:	fe 01       	movw	r30, r28
 952:	32 96       	adiw	r30, 0x02	; 2
 954:	44 c0       	rjmp	.+136    	; 0x9de <malloc+0x128>
 956:	fe 01       	movw	r30, r28
 958:	e2 0f       	add	r30, r18
 95a:	f3 1f       	adc	r31, r19
 95c:	81 93       	st	Z+, r24
 95e:	91 93       	st	Z+, r25
 960:	22 50       	subi	r18, 0x02	; 2
 962:	31 09       	sbc	r19, r1
 964:	39 83       	std	Y+1, r19	; 0x01
 966:	28 83       	st	Y, r18
 968:	3a c0       	rjmp	.+116    	; 0x9de <malloc+0x128>
 96a:	20 91 12 01 	lds	r18, 0x0112
 96e:	30 91 13 01 	lds	r19, 0x0113
 972:	23 2b       	or	r18, r19
 974:	41 f4       	brne	.+16     	; 0x986 <malloc+0xd0>
 976:	20 91 02 01 	lds	r18, 0x0102
 97a:	30 91 03 01 	lds	r19, 0x0103
 97e:	30 93 13 01 	sts	0x0113, r19
 982:	20 93 12 01 	sts	0x0112, r18
 986:	20 91 00 01 	lds	r18, 0x0100
 98a:	30 91 01 01 	lds	r19, 0x0101
 98e:	21 15       	cp	r18, r1
 990:	31 05       	cpc	r19, r1
 992:	41 f4       	brne	.+16     	; 0x9a4 <malloc+0xee>
 994:	2d b7       	in	r18, 0x3d	; 61
 996:	3e b7       	in	r19, 0x3e	; 62
 998:	40 91 04 01 	lds	r20, 0x0104
 99c:	50 91 05 01 	lds	r21, 0x0105
 9a0:	24 1b       	sub	r18, r20
 9a2:	35 0b       	sbc	r19, r21
 9a4:	e0 91 12 01 	lds	r30, 0x0112
 9a8:	f0 91 13 01 	lds	r31, 0x0113
 9ac:	e2 17       	cp	r30, r18
 9ae:	f3 07       	cpc	r31, r19
 9b0:	a0 f4       	brcc	.+40     	; 0x9da <malloc+0x124>
 9b2:	2e 1b       	sub	r18, r30
 9b4:	3f 0b       	sbc	r19, r31
 9b6:	28 17       	cp	r18, r24
 9b8:	39 07       	cpc	r19, r25
 9ba:	78 f0       	brcs	.+30     	; 0x9da <malloc+0x124>
 9bc:	ac 01       	movw	r20, r24
 9be:	4e 5f       	subi	r20, 0xFE	; 254
 9c0:	5f 4f       	sbci	r21, 0xFF	; 255
 9c2:	24 17       	cp	r18, r20
 9c4:	35 07       	cpc	r19, r21
 9c6:	48 f0       	brcs	.+18     	; 0x9da <malloc+0x124>
 9c8:	4e 0f       	add	r20, r30
 9ca:	5f 1f       	adc	r21, r31
 9cc:	50 93 13 01 	sts	0x0113, r21
 9d0:	40 93 12 01 	sts	0x0112, r20
 9d4:	81 93       	st	Z+, r24
 9d6:	91 93       	st	Z+, r25
 9d8:	02 c0       	rjmp	.+4      	; 0x9de <malloc+0x128>
 9da:	e0 e0       	ldi	r30, 0x00	; 0
 9dc:	f0 e0       	ldi	r31, 0x00	; 0
 9de:	cf 01       	movw	r24, r30
 9e0:	df 91       	pop	r29
 9e2:	cf 91       	pop	r28
 9e4:	08 95       	ret

000009e6 <free>:
 9e6:	cf 93       	push	r28
 9e8:	df 93       	push	r29
 9ea:	00 97       	sbiw	r24, 0x00	; 0
 9ec:	09 f4       	brne	.+2      	; 0x9f0 <free+0xa>
 9ee:	87 c0       	rjmp	.+270    	; 0xafe <free+0x118>
 9f0:	fc 01       	movw	r30, r24
 9f2:	32 97       	sbiw	r30, 0x02	; 2
 9f4:	13 82       	std	Z+3, r1	; 0x03
 9f6:	12 82       	std	Z+2, r1	; 0x02
 9f8:	c0 91 14 01 	lds	r28, 0x0114
 9fc:	d0 91 15 01 	lds	r29, 0x0115
 a00:	20 97       	sbiw	r28, 0x00	; 0
 a02:	81 f4       	brne	.+32     	; 0xa24 <free+0x3e>
 a04:	20 81       	ld	r18, Z
 a06:	31 81       	ldd	r19, Z+1	; 0x01
 a08:	28 0f       	add	r18, r24
 a0a:	39 1f       	adc	r19, r25
 a0c:	80 91 12 01 	lds	r24, 0x0112
 a10:	90 91 13 01 	lds	r25, 0x0113
 a14:	82 17       	cp	r24, r18
 a16:	93 07       	cpc	r25, r19
 a18:	79 f5       	brne	.+94     	; 0xa78 <free+0x92>
 a1a:	f0 93 13 01 	sts	0x0113, r31
 a1e:	e0 93 12 01 	sts	0x0112, r30
 a22:	6d c0       	rjmp	.+218    	; 0xafe <free+0x118>
 a24:	de 01       	movw	r26, r28
 a26:	20 e0       	ldi	r18, 0x00	; 0
 a28:	30 e0       	ldi	r19, 0x00	; 0
 a2a:	ae 17       	cp	r26, r30
 a2c:	bf 07       	cpc	r27, r31
 a2e:	50 f4       	brcc	.+20     	; 0xa44 <free+0x5e>
 a30:	12 96       	adiw	r26, 0x02	; 2
 a32:	4d 91       	ld	r20, X+
 a34:	5c 91       	ld	r21, X
 a36:	13 97       	sbiw	r26, 0x03	; 3
 a38:	9d 01       	movw	r18, r26
 a3a:	41 15       	cp	r20, r1
 a3c:	51 05       	cpc	r21, r1
 a3e:	09 f1       	breq	.+66     	; 0xa82 <free+0x9c>
 a40:	da 01       	movw	r26, r20
 a42:	f3 cf       	rjmp	.-26     	; 0xa2a <free+0x44>
 a44:	b3 83       	std	Z+3, r27	; 0x03
 a46:	a2 83       	std	Z+2, r26	; 0x02
 a48:	40 81       	ld	r20, Z
 a4a:	51 81       	ldd	r21, Z+1	; 0x01
 a4c:	84 0f       	add	r24, r20
 a4e:	95 1f       	adc	r25, r21
 a50:	8a 17       	cp	r24, r26
 a52:	9b 07       	cpc	r25, r27
 a54:	71 f4       	brne	.+28     	; 0xa72 <free+0x8c>
 a56:	8d 91       	ld	r24, X+
 a58:	9c 91       	ld	r25, X
 a5a:	11 97       	sbiw	r26, 0x01	; 1
 a5c:	84 0f       	add	r24, r20
 a5e:	95 1f       	adc	r25, r21
 a60:	02 96       	adiw	r24, 0x02	; 2
 a62:	91 83       	std	Z+1, r25	; 0x01
 a64:	80 83       	st	Z, r24
 a66:	12 96       	adiw	r26, 0x02	; 2
 a68:	8d 91       	ld	r24, X+
 a6a:	9c 91       	ld	r25, X
 a6c:	13 97       	sbiw	r26, 0x03	; 3
 a6e:	93 83       	std	Z+3, r25	; 0x03
 a70:	82 83       	std	Z+2, r24	; 0x02
 a72:	21 15       	cp	r18, r1
 a74:	31 05       	cpc	r19, r1
 a76:	29 f4       	brne	.+10     	; 0xa82 <free+0x9c>
 a78:	f0 93 15 01 	sts	0x0115, r31
 a7c:	e0 93 14 01 	sts	0x0114, r30
 a80:	3e c0       	rjmp	.+124    	; 0xafe <free+0x118>
 a82:	d9 01       	movw	r26, r18
 a84:	13 96       	adiw	r26, 0x03	; 3
 a86:	fc 93       	st	X, r31
 a88:	ee 93       	st	-X, r30
 a8a:	12 97       	sbiw	r26, 0x02	; 2
 a8c:	4d 91       	ld	r20, X+
 a8e:	5d 91       	ld	r21, X+
 a90:	a4 0f       	add	r26, r20
 a92:	b5 1f       	adc	r27, r21
 a94:	ea 17       	cp	r30, r26
 a96:	fb 07       	cpc	r31, r27
 a98:	79 f4       	brne	.+30     	; 0xab8 <free+0xd2>
 a9a:	80 81       	ld	r24, Z
 a9c:	91 81       	ldd	r25, Z+1	; 0x01
 a9e:	84 0f       	add	r24, r20
 aa0:	95 1f       	adc	r25, r21
 aa2:	02 96       	adiw	r24, 0x02	; 2
 aa4:	d9 01       	movw	r26, r18
 aa6:	11 96       	adiw	r26, 0x01	; 1
 aa8:	9c 93       	st	X, r25
 aaa:	8e 93       	st	-X, r24
 aac:	82 81       	ldd	r24, Z+2	; 0x02
 aae:	93 81       	ldd	r25, Z+3	; 0x03
 ab0:	13 96       	adiw	r26, 0x03	; 3
 ab2:	9c 93       	st	X, r25
 ab4:	8e 93       	st	-X, r24
 ab6:	12 97       	sbiw	r26, 0x02	; 2
 ab8:	e0 e0       	ldi	r30, 0x00	; 0
 aba:	f0 e0       	ldi	r31, 0x00	; 0
 abc:	8a 81       	ldd	r24, Y+2	; 0x02
 abe:	9b 81       	ldd	r25, Y+3	; 0x03
 ac0:	00 97       	sbiw	r24, 0x00	; 0
 ac2:	19 f0       	breq	.+6      	; 0xaca <free+0xe4>
 ac4:	fe 01       	movw	r30, r28
 ac6:	ec 01       	movw	r28, r24
 ac8:	f9 cf       	rjmp	.-14     	; 0xabc <free+0xd6>
 aca:	ce 01       	movw	r24, r28
 acc:	02 96       	adiw	r24, 0x02	; 2
 ace:	28 81       	ld	r18, Y
 ad0:	39 81       	ldd	r19, Y+1	; 0x01
 ad2:	82 0f       	add	r24, r18
 ad4:	93 1f       	adc	r25, r19
 ad6:	20 91 12 01 	lds	r18, 0x0112
 ada:	30 91 13 01 	lds	r19, 0x0113
 ade:	28 17       	cp	r18, r24
 ae0:	39 07       	cpc	r19, r25
 ae2:	69 f4       	brne	.+26     	; 0xafe <free+0x118>
 ae4:	30 97       	sbiw	r30, 0x00	; 0
 ae6:	29 f4       	brne	.+10     	; 0xaf2 <free+0x10c>
 ae8:	10 92 15 01 	sts	0x0115, r1
 aec:	10 92 14 01 	sts	0x0114, r1
 af0:	02 c0       	rjmp	.+4      	; 0xaf6 <free+0x110>
 af2:	13 82       	std	Z+3, r1	; 0x03
 af4:	12 82       	std	Z+2, r1	; 0x02
 af6:	d0 93 13 01 	sts	0x0113, r29
 afa:	c0 93 12 01 	sts	0x0112, r28
 afe:	df 91       	pop	r29
 b00:	cf 91       	pop	r28
 b02:	08 95       	ret

00000b04 <strnlen_P>:
 b04:	fc 01       	movw	r30, r24
 b06:	05 90       	lpm	r0, Z+
 b08:	61 50       	subi	r22, 0x01	; 1
 b0a:	70 40       	sbci	r23, 0x00	; 0
 b0c:	01 10       	cpse	r0, r1
 b0e:	d8 f7       	brcc	.-10     	; 0xb06 <strnlen_P+0x2>
 b10:	80 95       	com	r24
 b12:	90 95       	com	r25
 b14:	8e 0f       	add	r24, r30
 b16:	9f 1f       	adc	r25, r31
 b18:	08 95       	ret

00000b1a <memset>:
 b1a:	dc 01       	movw	r26, r24
 b1c:	01 c0       	rjmp	.+2      	; 0xb20 <memset+0x6>
 b1e:	6d 93       	st	X+, r22
 b20:	41 50       	subi	r20, 0x01	; 1
 b22:	50 40       	sbci	r21, 0x00	; 0
 b24:	e0 f7       	brcc	.-8      	; 0xb1e <memset+0x4>
 b26:	08 95       	ret

00000b28 <strnlen>:
 b28:	fc 01       	movw	r30, r24
 b2a:	61 50       	subi	r22, 0x01	; 1
 b2c:	70 40       	sbci	r23, 0x00	; 0
 b2e:	01 90       	ld	r0, Z+
 b30:	01 10       	cpse	r0, r1
 b32:	d8 f7       	brcc	.-10     	; 0xb2a <strnlen+0x2>
 b34:	80 95       	com	r24
 b36:	90 95       	com	r25
 b38:	8e 0f       	add	r24, r30
 b3a:	9f 1f       	adc	r25, r31
 b3c:	08 95       	ret

00000b3e <fputc>:
 b3e:	0f 93       	push	r16
 b40:	1f 93       	push	r17
 b42:	cf 93       	push	r28
 b44:	df 93       	push	r29
 b46:	18 2f       	mov	r17, r24
 b48:	09 2f       	mov	r16, r25
 b4a:	eb 01       	movw	r28, r22
 b4c:	8b 81       	ldd	r24, Y+3	; 0x03
 b4e:	81 fd       	sbrc	r24, 1
 b50:	03 c0       	rjmp	.+6      	; 0xb58 <fputc+0x1a>
 b52:	8f ef       	ldi	r24, 0xFF	; 255
 b54:	9f ef       	ldi	r25, 0xFF	; 255
 b56:	20 c0       	rjmp	.+64     	; 0xb98 <fputc+0x5a>
 b58:	82 ff       	sbrs	r24, 2
 b5a:	10 c0       	rjmp	.+32     	; 0xb7c <fputc+0x3e>
 b5c:	4e 81       	ldd	r20, Y+6	; 0x06
 b5e:	5f 81       	ldd	r21, Y+7	; 0x07
 b60:	2c 81       	ldd	r18, Y+4	; 0x04
 b62:	3d 81       	ldd	r19, Y+5	; 0x05
 b64:	42 17       	cp	r20, r18
 b66:	53 07       	cpc	r21, r19
 b68:	7c f4       	brge	.+30     	; 0xb88 <fputc+0x4a>
 b6a:	e8 81       	ld	r30, Y
 b6c:	f9 81       	ldd	r31, Y+1	; 0x01
 b6e:	9f 01       	movw	r18, r30
 b70:	2f 5f       	subi	r18, 0xFF	; 255
 b72:	3f 4f       	sbci	r19, 0xFF	; 255
 b74:	39 83       	std	Y+1, r19	; 0x01
 b76:	28 83       	st	Y, r18
 b78:	10 83       	st	Z, r17
 b7a:	06 c0       	rjmp	.+12     	; 0xb88 <fputc+0x4a>
 b7c:	e8 85       	ldd	r30, Y+8	; 0x08
 b7e:	f9 85       	ldd	r31, Y+9	; 0x09
 b80:	81 2f       	mov	r24, r17
 b82:	09 95       	icall
 b84:	89 2b       	or	r24, r25
 b86:	29 f7       	brne	.-54     	; 0xb52 <fputc+0x14>
 b88:	2e 81       	ldd	r18, Y+6	; 0x06
 b8a:	3f 81       	ldd	r19, Y+7	; 0x07
 b8c:	2f 5f       	subi	r18, 0xFF	; 255
 b8e:	3f 4f       	sbci	r19, 0xFF	; 255
 b90:	3f 83       	std	Y+7, r19	; 0x07
 b92:	2e 83       	std	Y+6, r18	; 0x06
 b94:	81 2f       	mov	r24, r17
 b96:	90 2f       	mov	r25, r16
 b98:	df 91       	pop	r29
 b9a:	cf 91       	pop	r28
 b9c:	1f 91       	pop	r17
 b9e:	0f 91       	pop	r16
 ba0:	08 95       	ret

00000ba2 <__ultoa_invert>:
 ba2:	fa 01       	movw	r30, r20
 ba4:	aa 27       	eor	r26, r26
 ba6:	28 30       	cpi	r18, 0x08	; 8
 ba8:	51 f1       	breq	.+84     	; 0xbfe <__ultoa_invert+0x5c>
 baa:	20 31       	cpi	r18, 0x10	; 16
 bac:	81 f1       	breq	.+96     	; 0xc0e <__ultoa_invert+0x6c>
 bae:	e8 94       	clt
 bb0:	6f 93       	push	r22
 bb2:	6e 7f       	andi	r22, 0xFE	; 254
 bb4:	6e 5f       	subi	r22, 0xFE	; 254
 bb6:	7f 4f       	sbci	r23, 0xFF	; 255
 bb8:	8f 4f       	sbci	r24, 0xFF	; 255
 bba:	9f 4f       	sbci	r25, 0xFF	; 255
 bbc:	af 4f       	sbci	r26, 0xFF	; 255
 bbe:	b1 e0       	ldi	r27, 0x01	; 1
 bc0:	3e d0       	rcall	.+124    	; 0xc3e <__ultoa_invert+0x9c>
 bc2:	b4 e0       	ldi	r27, 0x04	; 4
 bc4:	3c d0       	rcall	.+120    	; 0xc3e <__ultoa_invert+0x9c>
 bc6:	67 0f       	add	r22, r23
 bc8:	78 1f       	adc	r23, r24
 bca:	89 1f       	adc	r24, r25
 bcc:	9a 1f       	adc	r25, r26
 bce:	a1 1d       	adc	r26, r1
 bd0:	68 0f       	add	r22, r24
 bd2:	79 1f       	adc	r23, r25
 bd4:	8a 1f       	adc	r24, r26
 bd6:	91 1d       	adc	r25, r1
 bd8:	a1 1d       	adc	r26, r1
 bda:	6a 0f       	add	r22, r26
 bdc:	71 1d       	adc	r23, r1
 bde:	81 1d       	adc	r24, r1
 be0:	91 1d       	adc	r25, r1
 be2:	a1 1d       	adc	r26, r1
 be4:	20 d0       	rcall	.+64     	; 0xc26 <__ultoa_invert+0x84>
 be6:	09 f4       	brne	.+2      	; 0xbea <__ultoa_invert+0x48>
 be8:	68 94       	set
 bea:	3f 91       	pop	r19
 bec:	2a e0       	ldi	r18, 0x0A	; 10
 bee:	26 9f       	mul	r18, r22
 bf0:	11 24       	eor	r1, r1
 bf2:	30 19       	sub	r19, r0
 bf4:	30 5d       	subi	r19, 0xD0	; 208
 bf6:	31 93       	st	Z+, r19
 bf8:	de f6       	brtc	.-74     	; 0xbb0 <__ultoa_invert+0xe>
 bfa:	cf 01       	movw	r24, r30
 bfc:	08 95       	ret
 bfe:	46 2f       	mov	r20, r22
 c00:	47 70       	andi	r20, 0x07	; 7
 c02:	40 5d       	subi	r20, 0xD0	; 208
 c04:	41 93       	st	Z+, r20
 c06:	b3 e0       	ldi	r27, 0x03	; 3
 c08:	0f d0       	rcall	.+30     	; 0xc28 <__ultoa_invert+0x86>
 c0a:	c9 f7       	brne	.-14     	; 0xbfe <__ultoa_invert+0x5c>
 c0c:	f6 cf       	rjmp	.-20     	; 0xbfa <__ultoa_invert+0x58>
 c0e:	46 2f       	mov	r20, r22
 c10:	4f 70       	andi	r20, 0x0F	; 15
 c12:	40 5d       	subi	r20, 0xD0	; 208
 c14:	4a 33       	cpi	r20, 0x3A	; 58
 c16:	18 f0       	brcs	.+6      	; 0xc1e <__ultoa_invert+0x7c>
 c18:	49 5d       	subi	r20, 0xD9	; 217
 c1a:	31 fd       	sbrc	r19, 1
 c1c:	40 52       	subi	r20, 0x20	; 32
 c1e:	41 93       	st	Z+, r20
 c20:	02 d0       	rcall	.+4      	; 0xc26 <__ultoa_invert+0x84>
 c22:	a9 f7       	brne	.-22     	; 0xc0e <__ultoa_invert+0x6c>
 c24:	ea cf       	rjmp	.-44     	; 0xbfa <__ultoa_invert+0x58>
 c26:	b4 e0       	ldi	r27, 0x04	; 4
 c28:	a6 95       	lsr	r26
 c2a:	97 95       	ror	r25
 c2c:	87 95       	ror	r24
 c2e:	77 95       	ror	r23
 c30:	67 95       	ror	r22
 c32:	ba 95       	dec	r27
 c34:	c9 f7       	brne	.-14     	; 0xc28 <__ultoa_invert+0x86>
 c36:	00 97       	sbiw	r24, 0x00	; 0
 c38:	61 05       	cpc	r22, r1
 c3a:	71 05       	cpc	r23, r1
 c3c:	08 95       	ret
 c3e:	9b 01       	movw	r18, r22
 c40:	ac 01       	movw	r20, r24
 c42:	0a 2e       	mov	r0, r26
 c44:	06 94       	lsr	r0
 c46:	57 95       	ror	r21
 c48:	47 95       	ror	r20
 c4a:	37 95       	ror	r19
 c4c:	27 95       	ror	r18
 c4e:	ba 95       	dec	r27
 c50:	c9 f7       	brne	.-14     	; 0xc44 <__ultoa_invert+0xa2>
 c52:	62 0f       	add	r22, r18
 c54:	73 1f       	adc	r23, r19
 c56:	84 1f       	adc	r24, r20
 c58:	95 1f       	adc	r25, r21
 c5a:	a0 1d       	adc	r26, r0
 c5c:	08 95       	ret

00000c5e <__prologue_saves__>:
 c5e:	2f 92       	push	r2
 c60:	3f 92       	push	r3
 c62:	4f 92       	push	r4
 c64:	5f 92       	push	r5
 c66:	6f 92       	push	r6
 c68:	7f 92       	push	r7
 c6a:	8f 92       	push	r8
 c6c:	9f 92       	push	r9
 c6e:	af 92       	push	r10
 c70:	bf 92       	push	r11
 c72:	cf 92       	push	r12
 c74:	df 92       	push	r13
 c76:	ef 92       	push	r14
 c78:	ff 92       	push	r15
 c7a:	0f 93       	push	r16
 c7c:	1f 93       	push	r17
 c7e:	cf 93       	push	r28
 c80:	df 93       	push	r29
 c82:	cd b7       	in	r28, 0x3d	; 61
 c84:	de b7       	in	r29, 0x3e	; 62
 c86:	ca 1b       	sub	r28, r26
 c88:	db 0b       	sbc	r29, r27
 c8a:	0f b6       	in	r0, 0x3f	; 63
 c8c:	f8 94       	cli
 c8e:	de bf       	out	0x3e, r29	; 62
 c90:	0f be       	out	0x3f, r0	; 63
 c92:	cd bf       	out	0x3d, r28	; 61
 c94:	09 94       	ijmp

00000c96 <__epilogue_restores__>:
 c96:	2a 88       	ldd	r2, Y+18	; 0x12
 c98:	39 88       	ldd	r3, Y+17	; 0x11
 c9a:	48 88       	ldd	r4, Y+16	; 0x10
 c9c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c9e:	6e 84       	ldd	r6, Y+14	; 0x0e
 ca0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ca2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ca4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ca6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ca8:	b9 84       	ldd	r11, Y+9	; 0x09
 caa:	c8 84       	ldd	r12, Y+8	; 0x08
 cac:	df 80       	ldd	r13, Y+7	; 0x07
 cae:	ee 80       	ldd	r14, Y+6	; 0x06
 cb0:	fd 80       	ldd	r15, Y+5	; 0x05
 cb2:	0c 81       	ldd	r16, Y+4	; 0x04
 cb4:	1b 81       	ldd	r17, Y+3	; 0x03
 cb6:	aa 81       	ldd	r26, Y+2	; 0x02
 cb8:	b9 81       	ldd	r27, Y+1	; 0x01
 cba:	ce 0f       	add	r28, r30
 cbc:	d1 1d       	adc	r29, r1
 cbe:	0f b6       	in	r0, 0x3f	; 63
 cc0:	f8 94       	cli
 cc2:	de bf       	out	0x3e, r29	; 62
 cc4:	0f be       	out	0x3f, r0	; 63
 cc6:	cd bf       	out	0x3d, r28	; 61
 cc8:	ed 01       	movw	r28, r26
 cca:	08 95       	ret

00000ccc <_exit>:
 ccc:	f8 94       	cli

00000cce <__stop_program>:
 cce:	ff cf       	rjmp	.-2      	; 0xcce <__stop_program>
